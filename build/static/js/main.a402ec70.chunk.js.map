{"version":3,"sources":["components/HeaderComponent.js","api/index.js","components/CreatePostComponent.js","components/CommentComponent.js","components/MessagesComponent.js","components/PostList.js","components/Auth.js","index.js"],"names":["HeaderComponent","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","AppBar","position","style","background","Toolbar","BASE_URL","getToken","localStorage","getItem","setToken","token","setItem","buildHeaders","base","auth","username","password","a","isNew","url","fetch","method","headers","body","JSON","stringify","user","response","json","error","data","Error","message","hitAPI","endpoint","bodyObj","payload","CreatePostComponent","props","addNewPost","_id","setEditablePost","updatePost","useState","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","useEffect","isDirty","setIsDirty","bottom","className","gridTemplateColumns","maxWidth","gap","onSubmit","event","preventDefault","length","post","result","console","log","TextField","type","value","placeholder","onChange","target","color","TextareaAutosize","aria-label","rowsMin","Checkbox","checked","inputProps","Button","CommentComponent","content","setContent","wantsToReply","setReply","handleSubmit","onClick","MessageComponent","messageList","map","mes","idx","fromUser","PostList","postList","setPostList","display","gridColumn","gridRow","overflowY","padding","border","isAuthor","overflow","createdAt","variant","id","messages","Auth","setIsLoggedIn","setUsername","setPassword","errorMessage","setErrorMessage","Container","fixed","App","isLoggedIn","searchTerm","setSearchTerm","isRecent","setIsRecent","viewMessages","setViewMessages","userMessages","setUserMessages","editablePost","then","catch","posts","gridTemplateRows","marginBottom","width","height","removeItem","top","filter","toLowerCase","includes","Date","parse","now","reverse","newPost","updatedPost","index","findIndex","postListCopy","right","boxShadow","borderRadius","fontFamily","msg","flexDirection","justifyContent","maxHeight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a402ec70.chunk.js","sourcesContent":["import React, { useEffect, useState }  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {AppBar, Toolbar, Button, IconButton, Typography} from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      //background\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n  \n\nconst HeaderComponent = () => {\n    //const classes = useStyles();\n    return <AppBar position=\"absolute\" style={{background: \"#008080\"}}>\n  <Toolbar>\n   \n      Stanger Things\n  \n  </Toolbar>\n</AppBar>\n\n    \n  \n\n\n\n\n}\n\nexport default HeaderComponent;","const BASE_URL =\n  \"https://strangers-things.herokuapp.com/api/2007-LSU-RM-WEB-PT\";\n\nexport const getToken = () => {\n  return localStorage.getItem(\"auth-token\");\n};\n\nexport const clearToken = () => {\n  localStorage.removeItem(\"auth-token\");\n};\n\nconst setToken = (token) => {\n  localStorage.setItem(\"auth-token\", token);\n};\n\nfunction buildHeaders() {\n  let base = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (getToken()) {\n    base[\"Authorization\"] = `Bearer ${getToken()}`;\n  }\n\n  return base;\n}\n\nexport const auth = async (username, password, isNew = false) => {\n  const url = `${BASE_URL}/users` + (isNew ? \"/register\" : \"/login\");\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: buildHeaders(),\n    body: JSON.stringify({\n      user: {\n        username: username,\n        password: password,\n      },\n    }),\n  });\n\n  const { error, data } = await response.json();\n\n  if (error) {\n    throw Error(error.message);\n  }\n\n  if (data && data.token) {\n    setToken(data.token);\n  }\n\n  return data;\n};\n\nexport const hitAPI = async (method, endpoint, bodyObj) => {\n  const payload = {\n    method: method,\n    headers: buildHeaders(),\n  };\n\n  if (bodyObj) {\n    payload.body = JSON.stringify(bodyObj);\n  }\n\n  const response = await fetch(`${BASE_URL}${endpoint}`, payload);\n\n  const { error, data } = await response.json();\n\n  if (error) {\n    throw Error(error.message);\n  }\n\n  if (data && data.token) {\n    setToken(data.token);\n  }\n\n  return data;\n};\n","import React, { useEffect, useState } from \"react\";\nimport  \"./PostForm.css\"\nimport {\n  Checkbox,\n  TextField,\n  Button,\n  TextareaAutosize,\n  Container,\n} from \"@material-ui/core\";\nimport { hitAPI } from \"../api\";\n\nconst CreatePostComponent = (props) => {\n  const { addNewPost, _id, setEditablePost, updatePost} = props;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(false);\n  \n  \n  useEffect(() => {\n    setTitle(props.title || \"\");\n    setDescription(props.description || \"\");\n    setPrice(props.price || \"\");\n    setLocation(props.location || \"\");\n    setWillDeliver(props.willDeliver || false);\n  }, [_id]);\n\n  function clearForm() {\n    setTitle(\"\");\n    setDescription(\"\");\n    setPrice(\"\");\n    setLocation(\"\");\n    setWillDeliver(false);\n  }\n  const [isDirty, setIsDirty] = useState(false);\n\n  return (\n    <div style={{\n        \"paddingBottom\" : \"2000px\",\n        bottom: \"500px\"\n        \n        \n    }}>\n    \n        <form\n          className=\"post-form\"\n          style={{\n       // alignSelf: \"flex-start\",\n        // display: \"grid\",\n         gridTemplateColumns: \"repeat2 1fr\",\n        maxWidth: \"200px\",\n        gap: \"8px\",\n        bottom: \"500px\"\n      }}\n          onSubmit={async (event) => {\n            event.preventDefault();\n\n\n        if (title.length === 0) {\n          setIsDirty(true);\n          return;\n        }\n\n            const payload = {\n              post: {\n                title,\n                description,\n                price,\n                willDeliver,\n              },\n            };\n            if (location.length > 0) {\n              payload.post.location = location;\n            }\n\n            try {\n            if (_id) {\n            const result = await hitAPI(\"PATCH\", `/posts/${_id}`, payload);\n            updatePost(result.post);\n            setEditablePost({});\n          } else {\n            const result = await hitAPI(\"POST\", \"/posts\", payload);\n            addNewPost(result.post);\n            clearForm();\n          }\n          }catch (error) {\n              console.log(error);\n            }\n          }}\n        >\n          {_id ? <h3>Update Your Post</h3> : <h3>Create Post</h3>}\n          <TextField\n            type=\"text\"\n            value={title}\n            placeholder=\"Title here\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n          {isDirty && title.length === 0 ? (\n        <h3 style={{ color: \"red\" }}>You need a title</h3>\n      ) : null}\n\n          <TextareaAutosize\n            aria-label=\"minimum height\"\n            rowsMin={3}\n            placeholder=\"Minimum 3 rows\"\n            type=\"text\"\n            value={description}\n            placeholder=\"Description here\"\n            onChange={(event) => {\n              setDescription(event.target.value);\n            }}\n          />\n          <TextField\n            type=\"text\"\n            value={price}\n            placeholder=\"Price here\"\n            onChange={(event) => {\n              setPrice(event.target.value);\n            }}\n          />\n          <TextField\n            type=\"text\"\n            value={location}\n            placeholder=\"location here\"\n            onChange={(event) => {\n              setLocation(event.target.value);\n            }}\n          />\n\n          <Checkbox\n            checked={willDeliver}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            onChange={() => {\n              setWillDeliver(!willDeliver);\n            }}\n          />\n          <Button type=\"onSubmit\">Post</Button>\n        </form>\n     \n    </div>\n  );\n};\n\nexport default CreatePostComponent;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { hitAPI } from \"../api\";\n\nconst CommentComponent = (props) => {\n  const [content, setContent] = useState(\"\");\n  const { wantsToReply, setReply } = props;\n\n  console.log(props);\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(\n      props.wantsToReply,\n      \"this comes from props to comment component\"\n    );\n    //console.log(posts._id, \"person wants to reply\")\n    console.log(props);\n    const payload = {\n      message: {\n        content,\n      },\n    };\n    await hitAPI(\"POST\", `/posts/${wantsToReply}/messages`, payload);\n\n    setReply(\"\");\n    //console.log(wantsToReply, \"person wants to reply2\")\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          type=\"text\"\n          value={content}\n          placeholder=\"comment here\"\n          onChange={(event) => {\n            setContent(event.target.value);\n          }}\n        />\n      </form>\n      <Button type=\"submit\" onClick={handleSubmit}>\n        Send\n      </Button>\n    </div>\n  );\n};\n\nexport default CommentComponent;\n","import React, { useState } from \"react\";\n\nconst MessageComponent = (props) => {\n  const { messageList } = props;\n  console.log(messageList, \"this is props\");\n  return (\n    <div className=\"message\">\n      {messageList.map((mes, idx) => {\n        console.log(\"mes\", mes);\n        return (\n          <div className=\"message-card\" key={idx}>\n            <h1> from : {mes.fromUser.username}</h1>\n            <p>{mes.content}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nexport default MessageComponent;\n","import React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport CommentComponent from \"./CommentComponent\";\nimport { hitAPI } from \"../api\";\nimport MessageComponent from \"./MessagesComponent\";\n\nconst PostList = (props) => {\n  const [wantsToReply, setReply] = useState(\"\");\n  const { postList, setPostList } = props;\n //const {set} = props;\n\n  return (\n    <div  className=\"post-list\"\n    style={{\n      display: \"grid\",\n      gap: \"8px\",\n      gridColumn: 1,\n      gridRow: 2,\n      overflowY: \"scroll\",\n        padding: \"8px\",\n   \n    }}>\n      <h3> Posts Are Here!</h3>\n      {postList.map((post, idx) => {\n        return (\n          <div\n            className=\"post\"\n            key={idx}\n            style={{\n              border: post.isAuthor ? \"5px solid gold\" : \"1px solid brown\",\n              overflow: \"scroll\",\n            }}\n          >\n            <h5>\n              {post.title} ({post.location}) [{post.createdAt}]\n            </h5>\n            <p>{post.description}</p>\n            <div>\n              {wantsToReply === post._id ? (\n                <CommentComponent\n                  wantsToReply={wantsToReply}\n                  setReply={setReply}\n                />\n              ) : null}\n            </div>\n            <div>\n              {post.isAuthor ? (\n                  <div> \n                  <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  id={post._id}\n                  onClick={async () => {\n                    console.log(\"hey\", post._id);\n\n                     await hitAPI(\"DELETE\", `/posts/${post._id}`)\n                   \n                        setPostList([...postList]);\n                      \n                  }}\n                >\n                  {\" \"}\n                  DELETE\n                </Button>\n                  <Button onClick={() => {\n                      setEditablePost(post)\n                  }}> Edit</Button>\n                  \n                  \n                  \n                  </div>\n                \n                \n              ) : (\n                <Button\n                  variant=\"contained\"\n                  style={{ background: \"#B1B9B9\" }}\n                  onClick={async (event) => {\n                    console.log(post._id);\n                    setReply(post._id);\n                    //console.log(wantsToReply, \"wants to reply\")\n                  }}\n                >\n                  reply\n                </Button>\n              )}\n              <MessageComponent messageList={post.messages} />\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PostList;\n","import React, { useState } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { createMuiTheme } from '@material-ui/core/styles'\n//import TextField from '@material-ui/core/TextField'\nimport {Container} from \"@material-ui/core\"\n\nimport { auth } from \"../api\";\nimport { TextField } from \"@material-ui/core\";\n\nconst Auth = (props) => {\n  const { setIsLoggedIn } = props;\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  return (\n      <Container fixed >\n    <form onSubmit={(event) => event.preventDefault()}>\n      <h3>Register or Log In</h3>\n      {errorMessage ? <h5 className=\"error\">{errorMessage}</h5> : null}\n      <TextField\n        type=\"text\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n        placeholder=\"username\"\n      />\n      <br></br>\n      <TextField\n        type=\"password\"\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        placeholder=\"password\"\n      />\n      <br></br>\n      <div>\n      <Button \n      variant=\"contained\"\n      color=\"primary\"\n        onClick={async (event) => {\n          try {\n            const result = await auth(username, password, true);\n            setIsLoggedIn(true);\n          } catch (error) {\n            setErrorMessage(error.message);\n          }\n        }}\n      >\n        Register\n      </Button>\n   \n   \n      <Button variant=\"contained\"\n      \n        onClick={async (event) => {\n          try {\n            const result = await auth(username, password);\n            setIsLoggedIn(true);\n          } catch (error) {\n            setErrorMessage(error.message);\n          }\n        }}\n      >\n        Log In\n      </Button>\n      </div>\n     \n    </form>\n    </Container>\n  );\n};\n\nexport default Auth;","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport HeaderComponent from \"./components/HeaderComponent.js\";\nimport CreatePostComponent from \"./components/CreatePostComponent\";\nimport PostList from \"./components/PostList\";\nimport { Checkbox, Button, Container} from \"@material-ui/core\";\n\nimport { getToken, clearToken, hitAPI } from \"./api\";\n\nimport Auth from \"./components/Auth\";\n\nconst App = () => {\n  // a piece of state that represents the status of the current user\n  const [isLoggedIn, setIsLoggedIn] = useState(!!getToken());\n  const [postList, setPostList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isRecent, setIsRecent] = useState(false);\n  const [viewMessages, setViewMessages] = useState(false);\n  const [userMessages, setUserMessages] = useState([]);\n  const [editablePost, setEditablePost] = useState({});\n\n  function addNewPost(newPost) {\n    setPostList([...postList, newPost]);\n  }\n  function updatePost(updatedPost) {\n    let index = postList.findIndex((post) => {\n      return post._id === updatedPost._id;\n    });\n\n    if (index > -1) {\n      let postListCopy = [...postList];\n      postListCopy[index] = updatedPost;\n      setPostList(postListCopy);\n    }\n  }\n  function filteredPosts() {\n    const postsFilteredBySearchTerm = postList.filter((post) => {\n      return post.title.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n\n    const postsFilteredByRecency = postsFilteredBySearchTerm.filter((post) => {\n      if (!isRecent) {\n        return true;\n      }\n      const postTime = Date.parse(post.createdAt); // this is a timedate string...\n      const nowTime = Date.now();\n      const TWO_HOURS = 1000 * 60 * 60 * 4; // in milliseconds\n\n      return postTime + TWO_HOURS >= nowTime; // was the post within the last two hours\n    });\n    return postsFilteredByRecency.reverse();\n  }\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      setUserMessages([]);\n      return;\n    }\n    hitAPI(\"get\", \"/users/me\")\n    .then((data) => {\n      const { messages } = data;\n      setUserMessages(messages);\n    })\n    .catch(console.error);\n}, [isLoggedIn]);\n\n  useEffect(() => {\n    hitAPI(\"GET\", \"/posts\")\n      .then((data) => {\n        console.log(\"first data\", data);\n        const { posts } = data;\n        setPostList(posts);\n      })\n      .catch(console.error);\n  }, [isLoggedIn]);\n\n  return (\n  \n    <div className=\"app\" \n\n    style={{\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 360px\",\n        gridTemplateRows: \"auto 1fr\",\n      }}>\n      <HeaderComponent \n           style={{\n        position:\"sticky\",\n          gridRow: 1,\n          gridColumn: \"1 / 6\",\n          marginBottom: \"12px\",\n          background: \"#000\",\n          color: \"#fff\",\n          padding: \"8px\",\n        }}\n      />\n    <div >\n      {isLoggedIn ? (\n        <div style={{\n           \n        }} >\n          <h3>Thanks for logging in!</h3>\n          <Button \n          style={{\n          width: \"5rem\",\n          height: \"5rem\"\n      }}\n            onClick={() => {\n              clearToken();\n              setIsLoggedIn(false);\n            }}\n          >\n            LOG OUT\n          </Button>\n          </div>\n      ) : (\n        <Auth setIsLoggedIn={setIsLoggedIn} />\n      )}\n      </div>\n     \n        <input style={{\n            top: \"80px\",\n            position: \"relative\",\n          height:\"20px\",\n          width:\"200px\"\n      }}\n          type=\"text\"\n          value={searchTerm}\n          onChange={(event) => setSearchTerm(event.target.value)}\n          placeholder=\"Search Here\"\n        />\n\n        \n        <label style={{\n            height: \"40px\"\n        }}>\n          Recent Post Only\n          <Checkbox\n            checked={isRecent}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            onChange={() => {\n              setIsRecent(!isRecent);\n            }}\n          />\n        </label>\n        <br></br>\n        \n     \n      <PostList postList={filteredPosts()} \n      setPostList={setPostList}\n \n      />\n\n      {isLoggedIn ? <CreatePostComponent \n      addNewPost={addNewPost} \n      updatePost={updatePost}\n          {...editablePost}\n          setEditablePost={setEditablePost}\n      /> : null}\n\n<div\n        className=\"personal-messages\"\n        style={{\n          position: \"fixed\",\n          bottom: \"12px\",\n          right: \"12px\",\n        }}\n      >\n        {viewMessages ? (\n          <div\n            className=\"personal-message-list\"\n            style={{\n              padding: \"12px\",\n              overflowY: \"scroll\",\n              background: \"#ddf\",\n              marginBottom: \"12px\",\n              boxShadow: \"0 2px 4px -2px black\",\n              borderRadius: \"4px\",\n              fontFamily: \"sans-serif\",\n            }}\n          >\n            {userMessages.map((msg, idx) => {\n              return (\n                <p key={idx}>\n                  On {msg.post.title}, {msg.fromUser.username} says:{\" \"}\n                  {msg.content}\n                </p>\n              );\n            })}\n          </div>\n        ) : null}\n\n        <div\n          className=\"personal-message-list-toggle\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\",\n            maxHeight: \"480px\",\n          }}\n        >\n          <span\n            className=\"material-icons\"\n            style={{\n              padding: \"6px\",\n              borderRadius: \"50%\",\n              background: \"#f88\",\n              color: \"#fff\",\n            }}\n            onClick={() => setViewMessages(!viewMessages)}\n          >\n            mail\n          </span>\n        </div>\n        </div>\n       \n    </div>\n   \n    \n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"sourceRoot":""}